diff --git a/unidiff/patch.py b/unidiff/patch.py
index 7319515..ea98a38 100644
--- a/unidiff/patch.py
+++ b/unidiff/patch.py
@@ -206,6 +206,7 @@ class Hunk(list):
         return [str(l) for l in self.target_lines()]
 
 
+@implements_to_string
 class PatchedFile(list):
     """Patch updated file, it is a list of Hunks."""
 
@@ -225,18 +226,18 @@ class PatchedFile(list):
         return make_str("<PatchedFile: %s>") % make_str(self.path)
 
     def __str__(self):
-        source = ''
-        target = ''
+        source = u''
+        target = u''
         # patch info is optional
-        info = '' if self.patch_info is None else str(self.patch_info)
+        info = u'' if self.patch_info is None else unicode(self.patch_info)
         if not self.is_binary_file and self:
-            source = "--- %s%s\n" % (
+            source = u"--- %s%s\n" % (
                 self.source_file,
                 '\t' + self.source_timestamp if self.source_timestamp else '')
-            target = "+++ %s%s\n" % (
+            target = u"+++ %s%s\n" % (
                 self.target_file,
                 '\t' + self.target_timestamp if self.target_timestamp else '')
-        hunks = ''.join(unicode(hunk) for hunk in self)
+        hunks = u''.join(unicode(hunk) for hunk in self)
         return info + source + target + hunks
 
     def _parse_hunk(self, header, diff, encoding, metadata_only):
